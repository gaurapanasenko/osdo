/**
 * @file image.h
 * @brief Задає клас, який зберігає масив пікселів, ширину та висоту.
 */
#ifndef IMAGE_H
#define IMAGE_H
#include <EASTL/shared_ptr.h>

/**
 * Розмір пікселя у байтах
 *
 * Назва означає "компоненти" та взято з бібліотеки файлів заголовка `stb_image.h`.
 */
#define COMP 4

using eastl::shared_ptr;

/**
 * @brief Тип каналу зображення.
 * Використовується `unsigned char`, оскільки значення нашого каналу
 * знаходяться в діапазоні [0, 255], таким чином канал займає 8-біт.
 */
typedef unsigned char channel_t;

/**
 * @brief Тип пікселя.
 * Один піксель має `COMP` каналів і канал визначений типом `channel_t`.
 * Використовується 8-бітний канал зі значеннями, що знаходяться в діапазоні [0, 255].
 * Піксель має 4 канали (червоний, зелений, синій та альфа), тому займає 4 байти.
 */
typedef channel_t pixel_t[COMP];

/**
 * @brief Зберігає масив пікселів, ширину та висоту.
 */
class Image
{
public:
    /**
     * @brief Константнний масив пікселів.
     * Зберігає розумний вказівник на масив пікселів зображення
     * розміром висота*ширина.
     */
    shared_ptr<const pixel_t[]> data;
    /**
     * @brief Ширина зображення.
     */
    const int width;
    /**
     * @brief Висота зображення.
     */
    const int height;

    /**
     * @brief Конструктор для зображення.
     * Зберігає посилання на масив пікселів,
     * а також висоту та ширину зображення.
     * @param data Розумне посилання на масив пікселів,
     * розмір повинен бути `висота * ширина`.
     * @param width Ширина зображення.
     * @param height Висота зображення.
     */
    Image(shared_ptr<const pixel_t[]> data,
          const int width, const int height);
    /**
     * @brief Зчитування зображення з файлу.
     * @param path Шлях до файлу зображення.
     * @return клас `Image`, який посилається на пікселі.
     */
    static Image fromFile(const char *path);
};


#endif // IMAGE_H
